{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Toying backend",
        "description": "Toy example of a Spring backend"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "summary": "Gets a list of all users.",
                "responses": {
                    "200": {
                        "description": "All the users in the database.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user.",
                "requestBody": {
                    "$ref": "#/components/requestBodies/userRequestBody"
                },
                "responses": {
                    "201": {
                        "description": "The user was successfully created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/unprocessableEntityFieldsError"
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "summary": "Deletes the user with id {id}.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The user was successfully deleted."
                    },
                    "404": {
                        "description": "No user was found for the given id."
                    }
                }
            },
            "get": {
                "summary": "Gets the user with id {id}.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user with id {id}.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user was found for the given id."
                    }
                }
            },
            "put": {
                "summary": "Updates the user with id {id}.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/userRequestBody"
                },
                "responses": {
                    "200": {
                        "description": "The user was successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user was found for the given id."
                    },
                    "422": {
                        "$ref": "#/components/responses/unprocessableEntityFieldsError"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "id": {
                "name": "id",
                "in": "path",
                "description": "ID of the entity.",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "schemas": {
            "Birthday": {
                "type": "object",
                "properties": {
                    "birthday": {
                        "example": "2018-08-21",
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "CreatedAt": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    }
                }
            },
            "ErrorField": {
                "description": "An error on a form field.",
                "properties": {
                    "error": {
                        "example": "AlreadyExists",
                        "type": "string"
                    },
                    "field": {
                        "example": "email",
                        "type": "string"
                    }
                }
            },
            "FirstName": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "example": "Pieter",
                        "type": "string"
                    }
                }
            },
            "Id": {
                "type": "object",
                "properties": {
                    "id": {
                        "example": 1,
                        "format": "int64",
                        "minimum": 1,
                        "readOnly": true,
                        "type": "integer"
                    }
                }
            },
            "LastName": {
                "type": "object",
                "properties": {
                    "lastName": {
                        "example": "De Clercq",
                        "type": "string"
                    }
                }
            },
            "Password": {
                "type": "object",
                "properties": {
                    "password": {
                        "format": "password",
                        "type": "string",
                        "writeOnly": true
                    }
                }
            },
            "Url": {
                "type": "object",
                "properties": {
                    "url": {
                        "example": "http://localhost:8080/...",
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "User": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Birthday"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedAt"
                    },
                    {
                        "$ref": "#/components/schemas/Email"
                    },
                    {
                        "$ref": "#/components/schemas/FirstName"
                    },
                    {
                        "$ref": "#/components/schemas/Id"
                    },
                    {
                        "$ref": "#/components/schemas/LastName"
                    },
                    {
                        "$ref": "#/components/schemas/Password"
                    },
                    {
                        "$ref": "#/components/schemas/Url"
                    }
                ]
            }
        },
        "requestBodies": {
            "userRequestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            }
        },
        "responses": {
            "unprocessableEntityFieldsError": {
                "description": "The provided entity was not valid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorField"
                            }
                        }
                    }
                }
            }
        }
    }
}
